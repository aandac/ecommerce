version: '3.9'
services:
  postgres:
    image: postgres:alpine3.16
    environment: [
      POSTGRES_USER=postgres,
      POSTGRES_PASSWORD=postgres,
      PGDATA=/var/lib/postgresql/data/pgdata
    ]
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend
  redis:
    image: redis/redis-stack:6.2.2-v1
    ports:
      - "6379:6379"
      - "8001:8001"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    networks:
      - backend

  ecommercefe:
    build: ../ecommerce-fe/.
    ports:
      - "127.0.0.1:8080:8080"


  ecommercebe:
    build: ../ecommerce-be/.
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend

  transformimgs:
    image: pixboost/transformimgs
    environment:
      MAGICK_TIME_LIMIT: "90"
    ports:
      - "9090:8080"
    networks:
      - backend
  localstack:
    container_name: localstack
    image: localstack/localstack:latest
    environment:
      - DEBUG=1
      - USE_SSL=0
      - AWS_CBOR_DISABLE=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOSTNAME=localstack
      - SERVICES=s3
      - AWS_DEFAULT_REGION=us-east-1
      - DATA_DIR=/tmp/localstack/data
      - HOSTNAME_EXTERNAL= localhost
    ports:
      - "127.0.0.1:4510-4559:4510-4559"  # external service port range
      - "127.0.0.1:4566:4566"            # LocalStack Edge Proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./localstack-data:/tmp/localstack
      - ./script/localstack/s3/init-s3-bucket.sh:/docker-entrypoint-initaws.d/init-s3-bucket.sh

networks:
  backend:
